name: Deploy UI to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'ui/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./ui

      - name: Setup environment
        run: |
          # Create .env.local in the ui directory
          cd ui
          if [ ! -f .env.local ]; then
            echo "DATA_PATH=../data/sheets/output_kg.jsonl" > .env.local
          fi

      - name: Generate static data
        run: |
          # Create a static data file from the JSONL data
          python3 -c "
import json
import sys
sys.path.append('../scripts')
from process_sheet_and_save import load_knowledge_graph_data, transform_to_community_members

# Load and transform data
kg_data = load_knowledge_graph_data()
community_members = transform_to_community_members(kg_data)

# Extract categories
all_categories = set()
for entry in kg_data:
    for mapping_array in entry['mappings'].values():
        if isinstance(mapping_array, list):
            for mapping in mapping_array:
                if mapping.get('concept_label'):
                    all_categories.add(mapping['concept_label'])

# Create static data
static_data = {
    'materials': community_members,
    'categories': sorted(list(all_categories))
}

# Write to public directory
with open('public/static-data.json', 'w') as f:
    json.dump(static_data, f, indent=2)
"
        working-directory: ./ui

      - name: Build with Next.js
        run: npm run build
        working-directory: ./ui
        env:
          NODE_ENV: production

          
      - name: List build output
        run: |
          echo "Build output contents:"
          ls -la out/
          echo "Static files:"
          find out/ -name "*.html" -o -name "*.css" -o -name "*.js" | head -10
        working-directory: ./ui

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'out' directory from the ui folder
          path: './ui/out'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
